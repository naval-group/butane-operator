variables:
  IMAGE_NAME: $CI_PROJECT_NAME
  IMAGE_REPO: managed-services

build image:
  stage: ðŸ“¦ build
  rules: [exists: [Dockerfile]]
  needs: []
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script: |
    rm -rf /etc/ssl/certs/*
    cp /etc/gitlab-runner/certs/ca.crt /kaniko/ssl/certs/ca-certificates.crt
    install -D /etc/gitlab-runner/certs/ca.crt $CI_PROJECT_DIR/certs/ca-certificates.crt
    
    PUBLIC_OCI_REGISTRY_TOKEN=$(printf "%s:%s" "robot\$$SA_DMZ_USERNAME" "$SA_DMZ_PASSWORD" | base64 -w 0)
    INTERNAL_OCI_REGISTRY_TOKEN=$(printf "%s:%s" "$KANIKO_SA_USERNAME" "$KANIKO_SA_PASSWORD" | base64 -w 0)
    cat > /kaniko/.docker/config.json <<EOF
    {
      "auths": {
        "$PUBLIC_OCI_REGISTRY": { "auth": "$PUBLIC_OCI_REGISTRY_TOKEN" },
        "$INTERNAL_OCI_REGISTRY": { "auth": "$INTERNAL_OCI_REGISTRY_TOKEN" }
      }
    }
    EOF
  script: /kaniko/executor --context $CI_PROJECT_DIR --tar-path $IMAGE_NAME.tar --no-push
  artifacts:
    paths: [$IMAGE_NAME.tar]

push image:
  stage: ðŸš€ push
  rules: [exists: [Dockerfile]]
  needs: [build image]
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [""]
  before_script: |
    rm -rf /etc/ssl/certs/*
    cp /etc/gitlab-runner/certs/ca.crt /etc/ssl/certs/ca-certificates.crt
  script: |
    crane auth login --username "$KANIKO_SA_USERNAME" --password "$KANIKO_SA_PASSWORD" "$INTERNAL_OCI_REGISTRY"
    IMAGE="$INTERNAL_OCI_REGISTRY/$IMAGE_REPO/$IMAGE_NAME:$CI_COMMIT_REF_SLUG"; echo "$IMAGE"
    crane push $IMAGE_NAME.tar "$IMAGE"
