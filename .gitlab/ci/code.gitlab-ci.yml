lint code:
  stage: üö¶ test
  needs: []
  image:
    name: docker.io/chainguard/go:latest
    entrypoint: [bash]
  variables:
    GOPATH: /
  before_script: |
    rm -rf /etc/ssl/certs/*
    cp /etc/gitlab-runner/certs/ca.crt /etc/ssl/certs/ca-certificates.crt
    go install github.com/securego/gosec/v2/cmd/gosec@v2.20.0
  script: |
    make lint
    gosec $CI_PROJECT_DIR/...

test code:
  stage: üö¶ test
  needs: []
  image:
    name: docker.io/chainguard/go:latest
    entrypoint: [bash]
  before_script: |
    rm -rf /etc/ssl/certs/*
    cp /etc/gitlab-runner/certs/ca.crt /etc/ssl/certs/ca-certificates.crt
  script: make test
  coverage: '/coverage: \d+.\d+% of statements/'

scan code:
  stage: üõ∞Ô∏è scan
  needs: []
  image: docker.io/aquasec/trivy:latest
  variables:
    TRIVY_DEBUG: true
    TRIVY_DB_REPOSITORY: $PUBLIC_OCI_REGISTRY/ghcr.io/aquasecurity/trivy-db:2
  before_script: |
    rm -rf /etc/ssl/certs/*
    cp /etc/gitlab-runner/certs/ca.crt /etc/ssl/certs/ca-certificates.crt
  script: |
    trivy --version
    
    # Run scans
    time trivy repo --scanners=vuln "$CI_PROJECT_DIR" \
      --username=robot\$${SA_DMZ_USERNAME} --password=${SA_DMZ_PASSWORD} \
      --format=json --output=sast-scan-result.json
    
    time trivy repo --scanners=secret "$CI_PROJECT_DIR" \
      --username=robot\$${SA_DMZ_USERNAME} --password=${SA_DMZ_PASSWORD} \
      --format=json --output=secrets-scan-result.json
    
    # Convert scan results to table format and print to stdout
    trivy convert sast-scan-result.json --format=table
    trivy convert secrets-scan-result.json --format=table
    
    # Convert scan results to template format for GitLab CI reports
    trivy convert sast-scan-result.json --format=template \
      --template=@/contrib/gitlab.tpl --output=sast-scan-report.json
    trivy convert secrets-scan-result.json --format=template \
      --template=@/contrib/gitlab.tpl --output=secrets-scan-report.json
    
    # Fail on critical vulnerabilities
    trivy convert --quiet --exit-code=1 --severity=CRITICAL sast-scan-result.json
    trivy convert --quiet --exit-code=1 --severity=CRITICAL secrets-scan-result.json
  artifacts:
    when: always
    paths: [sast-scan-report.json, secrets-scan-report.json]
    reports:
      sast: [sast-scan-report.json]
      secret_detection: [secrets-scan-report.json]
